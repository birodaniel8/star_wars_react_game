{"version":3,"sources":["actions/types.js","reducers/card.js","reducers/data.js","reducers/game.js","reducers/index.js","store.js","styles.js","components/SampleWithoutReplacement.js","actions/card.js","actions/game.js","components/StartGameButton.js","components/Header.js","components/cards/Home.js","components/cards/Final.js","components/cards/CardItem.js","components/cards/Character.js","components/cards/Planet.js","components/cards/Movie.js","components/cards/Species.js","components/cards/Spaceship.js","components/cards/Vehicle.js","components/cards/PropertyCard.js","components/CardSelector.js","components/App.js","actions/data.js","components/Root.js","index.js"],"names":["SET_CARD","LOAD_DATA","SET_SPECIAL_CARD","SET_GAME_SETTINGS","RESET_COUNTER","ADD_TO_COUNTER","ADD_TO_PATH","initialState","selectedCard","type","name","propertyInfo","selectedSpecialCard","data","movies","characters","planets","species","spaceships","vehicles","settings","on","target","explore","counter","cardPath","combineReducers","card","state","action","payload","game","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","useStyles","makeStyles","homeCard","backgroundColor","mainStartButton","fontSize","height","width","marginTop","exploreStartButton","exploreButton","instructions","justifyContent","color","display","instructionText","textAlign","padding","lineHeight","marginBottom","header","boxShadow","overflow","headerButton","cancelIconBox","alignItems","cancelIcon","gameCard","gameCardTitle","paddingTop","itemButton","propertyCardTitle","finalImage","sampleWithoutReplacement","bucket","n","Math","min","length","idxs","Array","keys","getRandomIndex","randomIndex","floor","random","splice","sampled","i","push","setCard","cardType","dispatch","setGameSettings","resetCounter","connect","buttonText","buttonStyleClass","classes","Button","className","variant","onClick","sampledCharacters","useState","showTarget","setShowTarget","img_src","process","replace","Paper","Grid","container","spacing","item","xs","align","Typography","hidden","src","alt","showInstructions","setShowInstructions","style","marginLeft","margin","fontWeight","map","idx","getByURL","propertyItemList","url","fieldName","filter","CardItem","property","propertyName","setCardType","charAt","toUpperCase","slice","isArray","splittetProperty","split","sp","renderButton","defaultProps","character","planet","movie","title","spaceship","vehicle","filteredList","sampledList","pluralizedSelectedSpecialCard","isNaN","prop","includes","console","log","element","setSpecialCard","addToPath","loadData","addToCounter","currentCounter","allLoaded","setAllLoaded","useEffect","fetch","then","response","json","Object","entries","entry","every","LinearProgress","value","Container","maxWidth","THEME","createMuiTheme","typography","fontFamily","palette","primary","main","Root","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.810e2c5f.chunk.js","sourcesContent":["export const SET_CARD = \"SET_CARD\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\nexport const SET_SPECIAL_CARD = \"SET_SPECIAL_CARD\";\r\nexport const SET_GAME_SETTINGS = \"SET_GAME_SETTINGS\";\r\nexport const RESET_COUNTER = \"RESET_COUNTER\";\r\nexport const ADD_TO_COUNTER = \"ADD_TO_COUNTER\";\r\nexport const ADD_TO_PATH = \"ADD_TO_PATH\"","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_CARD, SET_SPECIAL_CARD } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  selectedCard: {\r\n    type: null,\r\n    name: null,\r\n    propertyInfo: {},\r\n  },\r\n  selectedSpecialCard: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CARD:\r\n      return {\r\n        ...state,\r\n        selectedCard: action.payload,\r\n      };\r\n    case SET_SPECIAL_CARD:\r\n      return {\r\n        ...state,\r\n        selectedSpecialCard: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { LOAD_DATA } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    movies: [],\r\n    characters: [],\r\n    planets: [],\r\n    species: [],\r\n    spaceships: [],\r\n    vehicles: [],\r\n  },\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, ...action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_GAME_SETTINGS, ADD_TO_COUNTER, RESET_COUNTER, ADD_TO_PATH } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  settings: {\r\n    on: false,\r\n    target: null,\r\n    explore: false,\r\n  },\r\n  counter: -1,\r\n  cardPath: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_GAME_SETTINGS:\r\n      return {\r\n        ...state,\r\n        settings: action.payload,\r\n      };\r\n    case ADD_TO_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: action.payload\r\n      }\r\n    case RESET_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: -1,\r\n        cardPath: [],\r\n      }\r\n    case ADD_TO_PATH:\r\n      return {\r\n        ...state,\r\n        cardPath: [...state.cardPath, action.payload]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport card from \"./card\";\r\nimport data from \"./data\";\r\nimport game from \"./game\";\r\n\r\nexport default combineReducers({\r\n  card,\r\n  data,\r\n  game,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n  // home:\r\n  homeCard: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n  },\r\n\r\n  mainStartButton: {\r\n    fontSize: 30,\r\n    height: \"70px\",\r\n    width: \"350px\",\r\n    marginTop: \"20px\",\r\n  },\r\n\r\n  exploreStartButton: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  exploreButton: {\r\n    fontSize: 20,\r\n    height: \"40px\",\r\n    width: \"350px\",\r\n  },\r\n\r\n  instructions: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"25px\",\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    width: \"60%\",\r\n  },\r\n\r\n  instructionText: {\r\n    textAlign: \"left\",\r\n    marginTop: \"10px\",\r\n    color: \"black\",\r\n    width: \"86%\",\r\n    backgroundColor: \"rgba(250, 250, 250, 0.95)\",\r\n    padding: \"10px\",\r\n    \"& p\": {\r\n      lineHeight: 1.2,\r\n      marginBottom: \"10px\",\r\n    },\r\n  },\r\n\r\n  // header:\r\n  header: {\r\n    backgroundColor: \"#f3f3f3\",\r\n    boxShadow: \"0px 0px 3px 3px rgba(250, 250, 250, 0.3)\",\r\n    overflow: \"hidden\",\r\n  },\r\n\r\n  headerButton: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  cancelIconBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  cancelIcon: {\r\n    \"&:hover\": {\r\n      color: \"rgba(207, 0, 15, 0.5)\",\r\n    },\r\n  },\r\n\r\n  // game card:\r\n  gameCard: {\r\n    boxShadow: \"0px 0px 3px 3px rgba(250, 250, 250, 0.3)\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#f3f3f3\",\r\n  },\r\n\r\n  gameCardTitle: {\r\n    height: \"50px\",\r\n    backgroundColor: \"#e0bea4\",\r\n    marginBottom: \"15px\",\r\n    marginTop: \"-5px\",\r\n    paddingTop: \"10px\",\r\n    fontSize: 20,\r\n  },\r\n\r\n  itemButton: {\r\n    width: \"90%\",\r\n  },\r\n\r\n  // property card:\r\n  propertyCardTitle: {\r\n    height: \"25px\",\r\n    backgroundColor: \"#F0EBBA\",\r\n    marginTop: \"-16px\",\r\n    marginBottom: \"10px\",\r\n    fontSize: 15,\r\n  },\r\n\r\n  // final card image:\r\n  finalImage: {\r\n    boxShadow: \"0px 0px 2px 2px rgba(0, 0, 0, 0.2)\",\r\n  }\r\n});\r\n","const sampleWithoutReplacement = (bucket, n) => {\r\n  n = Math.min(n, bucket.length);\r\n\r\n  // Array of indeces 0 to n:\r\n  var idxs = [...Array(bucket.length).keys()];\r\n\r\n  // Select a random index and remove it while returning:\r\n  const getRandomIndex = () => {\r\n    var randomIndex = Math.floor(Math.random() * idxs.length);\r\n    return idxs.splice(randomIndex, 1)[0];\r\n  };\r\n\r\n  var sampled = [];\r\n  for (var i = 0; i < n; i++) {\r\n    sampled.push(bucket[getRandomIndex()]);\r\n  }\r\n\r\n  return sampled;\r\n};\r\n\r\nexport default sampleWithoutReplacement;\r\n","import { SET_CARD, SET_SPECIAL_CARD } from \"../actions/types.js\";\r\n\r\n// Set card:\r\nexport const setCard = (cardType = null, name = null, propertyInfo = {}) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_CARD,\r\n    payload: {\r\n      type: cardType,\r\n      name: name,\r\n      propertyInfo: propertyInfo,\r\n    },\r\n  });\r\n};\r\n\r\n// Set special card:\r\nexport const setSpecialCard = (type) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_SPECIAL_CARD,\r\n    payload: type,\r\n  });\r\n};\r\n","import { SET_GAME_SETTINGS, ADD_TO_COUNTER, RESET_COUNTER, ADD_TO_PATH } from \"../actions/types.js\";\r\n\r\n// Set Game Settings:\r\nexport const setGameSettings = (settings) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_GAME_SETTINGS,\r\n    payload: settings,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const addToCounter = (currentCounter) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_TO_COUNTER,\r\n    payload: currentCounter + 1,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const resetCounter = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_COUNTER,\r\n    payload: null,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const addToPath = (item) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_TO_PATH,\r\n    payload: item,\r\n  });\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../styles\";\r\nimport sampleWithoutReplacement from \"./SampleWithoutReplacement\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../actions/game\";\r\n\r\nconst StartGameButton = ({ buttonText, buttonStyleClass, data, settings, setCard, setGameSettings, resetCounter }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      className={classes[buttonStyleClass]}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={() => {\r\n        const sampledCharacters = sampleWithoutReplacement(data.characters, 2);\r\n        setGameSettings({ ...settings, target: sampledCharacters[1].name, on: true, explore: false });\r\n        setCard(\"character\", sampledCharacters[0].name);\r\n        resetCounter();\r\n      }}\r\n    >\r\n      {buttonText}\r\n    </Button>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nStartGameButton.propTypes = {\r\n  buttonText: PropTypes.string.isRequired,\r\n  buttonStyleClass: PropTypes.string.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(StartGameButton);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Button, Typography } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport EmojiFlagsIcon from \"@material-ui/icons/EmojiFlags\";\r\n\r\nimport { useStyles } from \"../styles\";\r\nimport StartGameButton from \"./StartGameButton\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { setGameSettings } from \"../actions/game\";\r\n\r\nconst Header = ({ settings, counter, setCard, setGameSettings }) => {\r\n  const classes = useStyles();\r\n  const [showTarget, setShowTarget] = useState(false);\r\n\r\n  if (settings.on) {\r\n    const img_src = `${process.env.PUBLIC_URL}/sw_pics/${settings.target.replace(\"/\", \"-\")}.png`;\r\n    return (\r\n      <Paper className={classes.header}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={8} align=\"center\">\r\n            <Typography>Target character: </Typography>\r\n            <Button className={classes.headerButton} onClick={() => setShowTarget(!showTarget)}>\r\n              {settings.target}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={2} align=\"center\">\r\n            <Typography>Steps:</Typography>\r\n            <Button className={classes.headerButton}> {counter} </Button>\r\n          </Grid>\r\n          <Grid item xs={2} className={classes.cancelIconBox}>\r\n            {!showTarget ? (\r\n              <CancelIcon\r\n                className={classes.cancelIcon}\r\n                fontSize=\"large\"\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  setCard(\"Home\");\r\n                  setGameSettings({ ...settings, on: false });\r\n                }}\r\n              />\r\n            ) : (\r\n              <EmojiFlagsIcon\r\n                className={classes.cancelIcon}\r\n                fontSize=\"large\"\r\n                onClick={() => {\r\n                  setShowTarget(!showTarget);\r\n                  setCard(\"character\", settings.target);\r\n                  setGameSettings({ ...settings, on: false, explore: true });\r\n                }}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid container spacing={1} align=\"center\">\r\n            <Grid item xs={8} hidden={!showTarget}>\r\n              <Grid item xs={4} hidden={!showTarget}>\r\n                <img src={img_src} alt=\"\" width=\"100%\" />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n  if (settings.explore) {\r\n    return <StartGameButton buttonText=\"Start Game Now\" buttonStyleClass=\"exploreStartButton\" />;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\n// PropTypes:\r\nHeader.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  settings: state.game.settings,\r\n  counter: state.game.counter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings })(Header);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Button } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport StartGameButton from \"../StartGameButton\";\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../../actions/game\";\r\n\r\nconst Home = ({ data, settings, setCard, setGameSettings, resetCounter }) => {\r\n  const classes = useStyles();\r\n  const img_src = `${process.env.PUBLIC_URL}/main.png`;\r\n  const [showInstructions, setShowInstructions] = useState(false);\r\n\r\n  return (\r\n    <Paper className={classes.homeCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\" />\r\n\r\n      <StartGameButton buttonText=\"Start Game\" buttonStyleClass=\"mainStartButton\" />\r\n      <Button\r\n        className={classes.exploreButton}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          setCard(\"character\", sampleWithoutReplacement(data.characters, 1)[0].name);\r\n          resetCounter();\r\n          setGameSettings({ ...settings, explore: true });\r\n        }}\r\n      >\r\n        Explore\r\n      </Button>\r\n\r\n      <div className={classes.instructions} onClick={() => setShowInstructions(!showInstructions)}>\r\n        Instructions\r\n        {showInstructions ? (\r\n          <ExpandLessIcon style={{ marginLeft: \"5px\" }} />\r\n        ) : (\r\n          <ExpandMoreIcon style={{ marginLeft: \"5px\" }} />\r\n        )}\r\n      </div>\r\n\r\n      <div className={classes.instructionText} hidden={!showInstructions}>\r\n        <p>\r\n          The goal of this game is to get to a randomly selected target character from an other randomly selected\r\n          initial character in the least amount of steps.\r\n        </p>\r\n\r\n        <p>\r\n          In each step you can see a card with many properties and clicking on these properties will lead you to a new\r\n          card with new information (e.g. selecting the 'homeworld' will show additional info the planet itself or\r\n          selecting the 'yellow' eye property will list characters with yellow eyes).\r\n        </p>\r\n\r\n        <p>\r\n          Note that each category can only list 5 related items (the movie card will not show you all characters in that\r\n          movie but 5 randomly selected ones).\r\n        </p>\r\n\r\n        <p>\r\n          In the 'explore' mode you don't play a game, however all items in a category is listed to explore the Star\r\n          Wars galaxy.\r\n        </p>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nHome.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport StartGameButton from \"../StartGameButton\";\r\n\r\nconst Final = ({ settings, counter, cardPath }) => {\r\n  const classes = useStyles();\r\n\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${settings.target.replace(\"/\", \"-\")}.png`;\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <Typography style={{ margin: \"20px 0px\", padding: \"10px\", fontWeight: \"bold\" }}>\r\n        Congratulations! <br/> You have got to {settings.target} in {counter} steps.\r\n      </Typography>\r\n\r\n      <img src={img_src} alt=\"\" width=\"50%\" className={classes.finalImage}/>\r\n\r\n      <Typography style={{ marginTop: \"20px\", marginBottom: \"10px\" }}>Your path:</Typography>\r\n\r\n      {cardPath.map((item, idx) => (\r\n        <p key={`path_${idx}`}>\r\n          <b>{item}</b>\r\n        </p>\r\n      ))}\r\n      <p>\r\n        <b>{settings.target}</b>\r\n      </p>\r\n\r\n      <div style={{ marginTop: \"20px\" }}></div>\r\n      <StartGameButton buttonText=\"Start a New Game Now\" buttonStyleClass=\"exploreStartButton\" />\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nFinal.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  cardPath: PropTypes.array.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  settings: state.game.settings,\r\n  counter: state.game.counter,\r\n  cardPath: state.game.cardPath,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Final);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\n\r\nconst getByURL = (propertyItemList, url, fieldName = \"name\") => {\r\n  // returns the item's fieldName value given by the url\r\n  return propertyItemList.filter((item) => item.url === url)[0][fieldName];\r\n};\r\n\r\nconst CardItem = ({ item, property, propertyName, propertyItemList, fieldName, setCard, setCardType }) => {\r\n  const classes = useStyles();\r\n\r\n  // propertyName formatting:\r\n  if (!propertyName) {\r\n    propertyName = property.charAt(0).toUpperCase() + property.slice(1);\r\n  }\r\n  propertyName = propertyName.replace(/_/g, \" \");\r\n\r\n  const renderButton = () => {\r\n    if (propertyItemList) {\r\n      if (Array.isArray(item[property])) {\r\n        // if the property is an array of urls (eg. list of movie urls):\r\n        const sampledItems = sampleWithoutReplacement(item[property], 5);\r\n        return sampledItems.map((i, idx) => {\r\n          const name = getByURL(propertyItemList, i, fieldName);\r\n          return (\r\n            <Button\r\n              key={`${property}_${idx}`}\r\n              className={classes.itemButton}\r\n              variant=\"contained\"\r\n              onClick={() => setCard(setCardType, name)}\r\n            >\r\n              {name}\r\n            </Button>\r\n          );\r\n        });\r\n      }\r\n      // if the property is a single url:\r\n      const name = getByURL(propertyItemList, item[property], fieldName);\r\n      return (\r\n        <Button\r\n          key={property}\r\n          className={classes.itemButton}\r\n          variant=\"contained\"\r\n          onClick={() => setCard(setCardType, name)}\r\n        >\r\n          {name}\r\n        </Button>\r\n      );\r\n    }\r\n    // if the property is a string with a list of comma separated characteristics:\r\n    const splittetProperty = item[property].split(\", \");\r\n    if (splittetProperty.length > 1) {\r\n      return splittetProperty.map((sp, idx) => (\r\n        <Button\r\n          key={`${property}_${idx}`}\r\n          className={classes.itemButton}\r\n          variant=\"contained\"\r\n          onClick={() => setCard(setCardType, sp, { property: property, fieldName: fieldName })}\r\n        >\r\n          {sp}\r\n        </Button>\r\n      ));\r\n    }\r\n\r\n    // if the property is a single value:\r\n    return (\r\n      <Button\r\n        key={property}\r\n        className={classes.itemButton}\r\n        variant=\"contained\"\r\n        onClick={() => setCard(setCardType, item[property], { property: property, fieldName: fieldName })}\r\n      >\r\n        {item[property]}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  // rendering the item if the item[property] is available:\r\n  if (item[property] && item[property] !== \"unknown\" && item[property] !== \"n/a\" && item[property].length > 0) {\r\n    return (\r\n      <Grid container spacing={1} style={{ marginBottom: \"3px\" }}>\r\n        <Grid item xs={5} align=\"right\" style={{ paddingTop: \"10px\" }}>\r\n          <b>{propertyName}:</b>\r\n        </Grid>\r\n        <Grid item xs={7} align=\"left\">\r\n          {renderButton()}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\n// PropTypes:\r\nCardItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  property: PropTypes.string.isRequired,\r\n  propertyName: PropTypes.string,\r\n  propertyItemList: PropTypes.array,\r\n  fieldName: PropTypes.string,\r\n  setCard: PropTypes.func.isRequired,\r\n  setCardType: PropTypes.string,\r\n};\r\n\r\nCardItem.defaultProps = {\r\n  propertyName: null,\r\n  propertyItemList: null,\r\n  fieldName: \"name\",\r\n  setCardType: \"property\",\r\n};\r\n\r\nexport default connect(null, { setCard })(CardItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Character = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const character = data.characters.filter((character) => character.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${character.name.replace(\"/\", \"-\")}.png`;\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\" />\r\n      <Typography className={classes.gameCardTitle}>{character.name}</Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={character} property=\"homeworld\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={character} property=\"species\" propertyItemList={data.species} setCardType=\"species\" />\r\n        <CardItem\r\n          item={character}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          setCardType=\"movie\"\r\n          fieldName=\"title\"\r\n        />\r\n        <CardItem item={character} property=\"gender\" />\r\n        <CardItem item={character} property=\"skin_color\" />\r\n        <CardItem item={character} property=\"birth_year\" />\r\n        <CardItem item={character} property=\"eye_color\" />\r\n        <CardItem item={character} property=\"hair_color\" />\r\n        <CardItem item={character} property=\"height\" />\r\n        <CardItem item={character} property=\"mass\" />\r\n        <CardItem\r\n          item={character}\r\n          property=\"starships\"\r\n          propertyName=\"Spaceships\"\r\n          propertyItemList={data.spaceships}\r\n          setCardType=\"spaceship\"\r\n        />\r\n        <CardItem item={character} property=\"vehicles\" propertyItemList={data.vehicles} setCardType=\"vehicle\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nCharacter.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Character);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Planet = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const planet = data.planets.filter((planet) => planet.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${planet.name.replace(\"/\", \"-\")}.png`;\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\" />\r\n      <Typography className={classes.gameCardTitle}>{planet.name}</Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={planet} property=\"climate\" />\r\n        <CardItem item={planet} property=\"diameter\" />\r\n        <CardItem item={planet} property=\"gravity\" />\r\n        <CardItem item={planet} property=\"rotation_period\" />\r\n        <CardItem item={planet} property=\"orbital_period\" />\r\n        <CardItem item={planet} property=\"population\" />\r\n        <CardItem item={planet} property=\"terrain\" />\r\n        <CardItem\r\n          item={planet}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={planet} property=\"residents\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nPlanet.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Planet);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Movie = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const movie = data.movies.filter((movie) => movie.title === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${movie.title.replace(\"/\", \"-\")}.png`;\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\" />\r\n      <Typography className={classes.gameCardTitle}>{movie.title}</Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={movie} property=\"director\" fieldName=\"title\" />\r\n        <CardItem item={movie} property=\"producer\" fieldName=\"title\" />\r\n        <CardItem item={movie} property=\"release_date\" fieldName=\"title\" />\r\n        <CardItem item={movie} property=\"characters\" propertyItemList={data.characters} setCardType=\"character\" />\r\n        <CardItem item={movie} property=\"planets\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={movie} property=\"species\" propertyItemList={data.species} setCardType=\"species\" />\r\n        <CardItem\r\n          item={movie}\r\n          property=\"starships\"\r\n          propertyName=\"Spaceships\"\r\n          propertyItemList={data.spaceships}\r\n          setCardType=\"spaceship\"\r\n        />\r\n        <CardItem item={movie} property=\"vehicles\" propertyItemList={data.vehicles} setCardType=\"vehicle\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nMovie.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Movie);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Species = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const species = data.species.filter((species) => species.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${species.name.replace(\"/\", \"-\")}.png`;\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\" />\r\n      <Typography className={classes.gameCardTitle}>{species.name}</Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={species} property=\"homeworld\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={species} property=\"classification\" />\r\n        <CardItem item={species} property=\"designation\" />\r\n        <CardItem item={species} property=\"language\" />\r\n        <CardItem item={species} property=\"average_lifespan\" />\r\n        <CardItem item={species} property=\"average_height\" />\r\n        <CardItem item={species} property=\"skin_colors\" />\r\n        <CardItem item={species} property=\"hair_colors\" />\r\n        <CardItem item={species} property=\"eye_colors\" />\r\n        <CardItem\r\n          item={species}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={species} property=\"people\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nSpecies.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Species);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Spaceship = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const spaceship = data.spaceships.filter((spaceship) => spaceship.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${spaceship.name.replace(\"/\", \"-\")}.png`;\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\" />\r\n      <Typography className={classes.gameCardTitle}>{spaceship.name}</Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={spaceship} property=\"model\" />\r\n        <CardItem item={spaceship} property=\"manufacturer\" />\r\n        <CardItem item={spaceship} property=\"cost_in_credits\" />\r\n        <CardItem item={spaceship} property=\"crew\" />\r\n        <CardItem item={spaceship} property=\"length\" />\r\n        <CardItem item={spaceship} property=\"max_atmosphering_speed\" />\r\n        <CardItem item={spaceship} property=\"hyperdrive_rating\" />\r\n        <CardItem\r\n          item={spaceship}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={spaceship} property=\"pilots\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nSpaceship.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Spaceship);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Vehicle = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const vehicle = data.vehicles.filter((vehicle) => vehicle.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${vehicle.name.replace(\"/\", \"-\")}.png`;\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\" />\r\n      <Typography className={classes.gameCardTitle}>{vehicle.name}</Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={vehicle} property=\"model\" />\r\n        <CardItem item={vehicle} property=\"manufacturer\" />\r\n        <CardItem item={vehicle} property=\"cost_in_credits\" />\r\n        <CardItem item={vehicle} property=\"crew\" />\r\n        <CardItem item={vehicle} property=\"length\" />\r\n        <CardItem item={vehicle} property=\"max_atmosphering_speed\" />\r\n        <CardItem\r\n          item={vehicle}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={vehicle} property=\"pilots\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nVehicle.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Vehicle);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../../styles\";\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\n\r\nconst PropertyCard = ({ data, settings, name, propertyInfo, selectedSpecialCard, setCard }) => {\r\n  const classes = useStyles();\r\n\r\n  const pluralizedSelectedSpecialCard =\r\n    selectedSpecialCard.charAt(selectedSpecialCard.length - 1) === \"s\"\r\n      ? selectedSpecialCard\r\n      : selectedSpecialCard + \"s\";\r\n\r\n  var filteredList;\r\n  if (isNaN(name)) {\r\n    // if it is a birth year:\r\n    if (name.slice(-3) === \"BBY\" && !isNaN(name.slice(0, -3))) {\r\n      console.log(name.slice(0, -3));\r\n      filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n        (prop) =>\r\n          prop[propertyInfo.property].slice(0, -3) >= name.slice(0, -3) * 0.9 &&\r\n          prop[propertyInfo.property].slice(0, -3) <= name.slice(0, -3) * 1.1\r\n      );\r\n    } else {\r\n      // if it is a normal string:\r\n      filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n        (prop) =>\r\n          prop[propertyInfo.property] === name ||\r\n          prop[propertyInfo.property].includes(name + \",\") ||\r\n          prop[propertyInfo.property].includes(\", \" + name)\r\n      );\r\n    }\r\n  } else {\r\n    // if it is a number:\r\n    filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n      (prop) => prop[propertyInfo.property] >= name * 0.9 && prop[propertyInfo.property] <= name * 1.1\r\n    );\r\n  }\r\n\r\n  var sampledList;\r\n  // sample 5 random items in game mode:\r\n  if (settings.explore) {\r\n    sampledList = filteredList;\r\n  } else {\r\n    sampledList = sampleWithoutReplacement(filteredList, 5);\r\n  }\r\n\r\n  // property name formatting:\r\n  var propertyName = propertyInfo.property.charAt(0).toUpperCase() + propertyInfo.property.slice(1);\r\n  propertyName = propertyName.replace(/_/g, \" \");\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <Typography className={classes.gameCardTitle}>{name}</Typography>\r\n      <Typography className={classes.propertyCardTitle}>({propertyName})</Typography>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={5} align=\"right\" style={{ paddingTop: \"10px\" }}>\r\n          <b>{pluralizedSelectedSpecialCard.charAt(0).toUpperCase() + pluralizedSelectedSpecialCard.slice(1)}:</b>\r\n        </Grid>\r\n        <Grid item xs={7} align=\"left\">\r\n          {sampledList.map((element, idx) => {\r\n            return (\r\n              <Button\r\n                key={`${propertyName}_${idx}`}\r\n                className={classes.itemButton}\r\n                variant=\"contained\"\r\n                onClick={() => setCard(selectedSpecialCard, element[propertyInfo.fieldName])}\r\n              >\r\n                {element[propertyInfo.fieldName]}\r\n              </Button>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nPropertyCard.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  propertyInfo: PropTypes.object.isRequired,\r\n  selectedSpecialCard: PropTypes.string.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n  selectedSpecialCard: state.card.selectedSpecialCard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard })(PropertyCard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport Home from \"./cards/Home\";\r\nimport Final from \"./cards/Final\";\r\nimport Character from \"./cards/Character\";\r\nimport Planet from \"./cards/Planet\";\r\nimport Movie from \"./cards/Movie\";\r\nimport Species from \"./cards/Species\";\r\nimport Spaceship from \"./cards/Spaceship\";\r\nimport Vehicle from \"./cards/Vehicle\";\r\nimport PropertyCard from \"./cards/PropertyCard\";\r\n\r\nimport { setSpecialCard } from \"../actions/card\";\r\nimport { addToPath } from \"../actions/game\";\r\n\r\nconst CardSelector = ({ selectedCard, setSpecialCard, addToPath }) => {\r\n  selectedCard.type !== \"property\" && setSpecialCard(selectedCard.type);\r\n  addToPath(selectedCard.name);\r\n  switch (selectedCard.type) {\r\n    case \"Home\":\r\n      return <Home />;\r\n    case \"Final\":\r\n      return <Final />;\r\n    case \"character\":\r\n      return <Character name={selectedCard.name} />;\r\n    case \"planet\":\r\n      return <Planet name={selectedCard.name} />;\r\n    case \"movie\":\r\n      return <Movie name={selectedCard.name} />;\r\n    case \"species\":\r\n      return <Species name={selectedCard.name} />;\r\n    case \"spaceship\":\r\n      return <Spaceship name={selectedCard.name} />;\r\n    case \"vehicle\":\r\n      return <Vehicle name={selectedCard.name} />;\r\n    case \"property\":\r\n      return <PropertyCard name={selectedCard.name} propertyInfo={selectedCard.propertyInfo} />;\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n\r\n// PropTypes:\r\nCardSelector.propTypes = {\r\n  selectedCard: PropTypes.object.isRequired,\r\n  setSpecialCard: PropTypes.func.isRequired,\r\n  addToPath: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  selectedCard: state.card.selectedCard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setSpecialCard, addToPath })(CardSelector);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { LinearProgress, Container } from \"@material-ui/core\";\r\n\r\nimport Header from \"./Header\";\r\nimport CardSelector from \"./CardSelector\";\r\nimport { loadData } from \"../actions/data\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { setGameSettings, addToCounter } from \"../actions/game\";\r\n\r\nconst App = ({ data, settings, counter, selectedCard, loadData, setCard, setGameSettings, addToCounter }) => {\r\n  const [allLoaded, setAllLoaded] = useState(false);\r\n\r\n  const loadAllData = () => {\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/films.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ movies: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/people.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ characters: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/planets.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ planets: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/species.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ species: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/starships.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ spaceships: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/vehicles.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ vehicles: response[\"items\"] });\r\n      });\r\n  };\r\n\r\n  useEffect(() => loadAllData(), []);\r\n  useEffect(() => allLoaded && setCard(\"Home\"), [allLoaded, setCard]);\r\n  useEffect(() => {\r\n    if (settings.target === selectedCard.name && settings.on === true) {\r\n      setGameSettings({ ...settings, on: false });\r\n      setCard(\"Final\");\r\n    } else {\r\n      addToCounter(counter);\r\n    }\r\n  }, [selectedCard]);\r\n  useEffect(() => {\r\n    setAllLoaded(\r\n      Object.entries(data)\r\n        .map((entry) => entry[1].length)\r\n        .every((item) => item > 0)\r\n    );\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <LinearProgress variant=\"determinate\" color=\"primary\" value={allLoaded === true ? 100 : 0} />\r\n      <Container maxWidth=\"xs\" align=\"center\">\r\n        <Header />\r\n        <CardSelector />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nApp.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  selectedCard: PropTypes.object.isRequired,\r\n  loadData: PropTypes.func.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  addToCounter: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n  counter: state.game.counter,\r\n  selectedCard: state.card.selectedCard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadData, setCard, setGameSettings, addToCounter })(App);\r\n","import { LOAD_DATA } from \"../actions/types.js\";\r\n\r\n// Set Data:\r\nexport const loadData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: LOAD_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\"; // wrap this around everything for redux\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nimport store from \"../store\";\r\nimport App from \"./App\";\r\n\r\nexport const THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: `'Audiowide', cursive`,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#FFCD00\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Root = () => {\r\n  return (\r\n    <MuiThemeProvider theme={THEME}>\r\n      <Provider store={store}>\r\n        <div>\r\n          <App />\r\n        </div>\r\n      </Provider>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Root from \"./components/Root\";\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}