{"version":3,"sources":["actions/types.js","reducers/card.js","reducers/data.js","reducers/game.js","reducers/index.js","store.js","components/SampleWithoutReplacement.js","actions/card.js","actions/game.js","components/StartGameButton.js","components/Header.js","components/cards/CardItem.js","components/cards/Character.js","components/cards/Planet.js","components/cards/Movie.js","components/cards/Species.js","components/cards/Spaceship.js","components/cards/Vehicle.js","components/cards/PropertyCard.js","components/cards/Home.js","components/cards/Final.js","components/CardSelector.js","components/App.js","actions/data.js","components/Root.js","index.js"],"names":["SET_CARD","LOAD_DATA","SET_SPECIAL_CARD","SET_GAME_SETTINGS","RESET_COUNTER","ADD_TO_COUNTER","initialState","selectedCard","type","name","propertyInfo","selectedSpecialCard","data","movies","characters","planets","species","spaceships","vehicles","settings","on","target","level","explore","counter","combineReducers","card","state","action","payload","game","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","sampleWithoutReplacement","bucket","n","Math","min","length","idxs","Array","keys","getRandomIndex","randomIndex","floor","random","splice","sampled","i","push","setCard","cardType","dispatch","setGameSettings","resetCounter","connect","buttonText","Button","variant","color","onClick","sampledCharacters","Typography","disabled","getByURL","propertyItemList","url","fieldName","filter","item","CardItem","property","propertyName","setCardType","charAt","toUpperCase","slice","replace","Grid","container","spacing","xs","align","isArray","map","splittetProperty","split","sp","renderButton","defaultProps","character","img_src","process","Paper","src","alt","width","planet","movie","title","spaceship","vehicle","filteredList","pluralizedSelectedSpecialCard","isNaN","prop","includes","console","log","sampledList","element","style","height","margin","fontWeight","setSpecialCard","loadData","addToCounter","currentCounter","useState","allLoaded","setAllLoaded","useEffect","fetch","then","response","json","Object","entries","entry","every","className","LinearProgress","value","Container","maxWidth","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c913329c.chunk.js","sourcesContent":["export const SET_CARD = \"SET_CARD\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\nexport const SET_SPECIAL_CARD = \"SET_SPECIAL_CARD\";\r\nexport const SET_GAME_SETTINGS = \"SET_GAME_SETTINGS\";\r\nexport const RESET_COUNTER = \"RESET_COUNTER\";\r\nexport const ADD_TO_COUNTER = \"ADD_TO_COUNTER\";","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_CARD, SET_SPECIAL_CARD } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  selectedCard: {\r\n    type: null,\r\n    name: null,\r\n    propertyInfo: {},\r\n  },\r\n  selectedSpecialCard: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CARD:\r\n      return {\r\n        ...state,\r\n        selectedCard: action.payload,\r\n      };\r\n    case SET_SPECIAL_CARD:\r\n      return {\r\n        ...state,\r\n        selectedSpecialCard: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { LOAD_DATA } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    movies: [],\r\n    characters: [],\r\n    planets: [],\r\n    species: [],\r\n    spaceships: [],\r\n    vehicles: [],\r\n  },\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, ...action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_GAME_SETTINGS, ADD_TO_COUNTER, RESET_COUNTER } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  settings: {\r\n    on: false,\r\n    target: null,\r\n    level: \"easy\",\r\n    explore: false,\r\n  },\r\n  counter: -1,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_GAME_SETTINGS:\r\n      return {\r\n        ...state,\r\n        settings: action.payload,\r\n      };\r\n    case ADD_TO_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: action.payload\r\n      }\r\n    case RESET_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: -1,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport card from \"./card\";\r\nimport data from \"./data\";\r\nimport game from \"./game\";\r\n\r\nexport default combineReducers({\r\n  card,\r\n  data,\r\n  game,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;","const sampleWithoutReplacement = (bucket, n) => {\r\n  n = Math.min(n, bucket.length);\r\n\r\n  // Array of indeces 0 to n:\r\n  var idxs = [...Array(bucket.length).keys()]\r\n\r\n  // Select a random index and remove it while returning:\r\n  const getRandomIndex = () => {\r\n    var randomIndex = Math.floor(Math.random() * idxs.length);\r\n    return idxs.splice(randomIndex, 1)[0];\r\n  };\r\n\r\n  var sampled = [];\r\n  for (var i = 0; i < n; i++) {\r\n    sampled.push(bucket[getRandomIndex()]);\r\n  }\r\n\r\n  return sampled;\r\n};\r\n\r\nexport default sampleWithoutReplacement","import { SET_CARD, SET_SPECIAL_CARD } from \"../actions/types.js\";\r\n\r\n// Set card:\r\nexport const setCard = (cardType = null, name = null, propertyInfo = {}) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_CARD,\r\n    payload: {\r\n      type: cardType,\r\n      name: name,\r\n      propertyInfo: propertyInfo,\r\n    },\r\n  });\r\n};\r\n\r\n// Set special card:\r\nexport const setSpecialCard = (type) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_SPECIAL_CARD,\r\n    payload: type,\r\n  });\r\n};\r\n","import { SET_GAME_SETTINGS, ADD_TO_COUNTER, RESET_COUNTER } from \"../actions/types.js\";\r\n\r\n// Set Game Settings:\r\nexport const setGameSettings = (settings) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_GAME_SETTINGS,\r\n    payload: settings,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const addToCounter = (currentCounter) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_TO_COUNTER,\r\n    payload: currentCounter + 1,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const resetCounter = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_COUNTER,\r\n    payload: null,\r\n  });\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport sampleWithoutReplacement from \"./SampleWithoutReplacement\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../actions/game\";\r\n\r\nconst StartGameButton = ({ buttonText, setGameSettings, setCard, resetCounter, settings, data }) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      onClick={() => {\r\n        const sampledCharacters = sampleWithoutReplacement(data.characters, 2);\r\n        setGameSettings({ ...settings, target: sampledCharacters[1].name, on: true, explore: false });\r\n        setCard(\"character\", sampledCharacters[0].name);\r\n        resetCounter();\r\n      }}\r\n    >\r\n      {buttonText}\r\n    </Button>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nStartGameButton.propTypes = {\r\n  buttonText: PropTypes.string.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(StartGameButton);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { LinearProgress, Button, Container, Typography } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport StartGameButton from \"./StartGameButton\"\r\nimport { setCard } from \"../actions/card\";\r\nimport { setGameSettings } from \"../actions/game\";\r\n\r\nconst Header = ({ counter, settings, setCard, setGameSettings }) => {\r\n  if (settings.on) {\r\n    return (\r\n      <div>\r\n        <Typography>Target character: {settings.target}</Typography>\r\n        <Button disabled>{counter}</Button>\r\n        <CancelIcon\r\n          color=\"error\"\r\n          onClick={() => {\r\n            setCard(\"Home\");\r\n            setGameSettings({ ...settings, on: false });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  if (settings.explore) {\r\n    return (\r\n      <StartGameButton buttonText=\"Start Game Now\"/>\r\n    )\r\n  }\r\n  return <div></div>\r\n\r\n};\r\n\r\n// PropTypes:\r\nHeader.propTypes = {\r\n  setCard: PropTypes.func.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  counter: state.game.counter,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings })(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n\r\nimport { setCard } from \"../../actions/card\";\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\n\r\nconst getByURL = (propertyItemList, url, fieldName = \"name\") => {\r\n  // returns the item's fieldName value given by the url\r\n  return propertyItemList.filter((item) => item.url === url)[0][fieldName];\r\n};\r\n\r\nconst CardItem = ({ item, property, propertyName, propertyItemList, fieldName, setCard, setCardType }) => {\r\n  // propertyName formatting:\r\n  if (!propertyName) {\r\n    propertyName = property.charAt(0).toUpperCase() + property.slice(1);\r\n  }\r\n  propertyName = propertyName.replace(/_/g, \" \");\r\n\r\n  const renderButton = () => {\r\n    if (propertyItemList) {\r\n      if (Array.isArray(item[property])) {\r\n        // if the property is an array of urls (eg. list of movie urls):\r\n        const sampledItems = sampleWithoutReplacement(item[property], 5);\r\n        return sampledItems.map((i) => {\r\n          const name = getByURL(propertyItemList, i, fieldName);\r\n          return (\r\n            <Button variant=\"contained\" onClick={() => setCard(setCardType, name)}>\r\n              {name}\r\n            </Button>\r\n          );\r\n        });\r\n      }\r\n      // if the property is a single url:\r\n      const name = getByURL(propertyItemList, item[property], fieldName);\r\n      return (\r\n        <Button variant=\"contained\" onClick={() => setCard(setCardType, name)}>\r\n          {name}\r\n        </Button>\r\n      );\r\n    }\r\n    // if the property is a string with a list of comma separated characteristics:\r\n    const splittetProperty = item[property].split(\", \");\r\n    if (splittetProperty.length > 1) {\r\n      return splittetProperty.map((sp) => (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => setCard(setCardType, sp, { property: property, fieldName: fieldName })}\r\n        >\r\n          {sp}\r\n        </Button>\r\n      ));\r\n    }\r\n\r\n    // if the property is a single value:\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => setCard(setCardType, item[property], { property: property, fieldName: fieldName })}\r\n      >\r\n        {item[property]}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  // rendering the item if the item[property] is available:\r\n  if (item[property] && item[property] !== \"unknown\" && item[property] !== \"n/a\" && item[property].length > 0) {\r\n    return (\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={5} align=\"right\">\r\n          <b>{propertyName}:</b>\r\n        </Grid>\r\n        <Grid item xs={7} align=\"left\">\r\n          {renderButton()}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\n// PropTypes:\r\nCardItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  property: PropTypes.string.isRequired,\r\n  propertyName: PropTypes.string,\r\n  propertyItemList: PropTypes.array,\r\n  fieldName: PropTypes.string,\r\n  setCard: PropTypes.func.isRequired,\r\n  setCardType: PropTypes.string,\r\n};\r\n\r\nCardItem.defaultProps = {\r\n  propertyName: null,\r\n  propertyItemList: null,\r\n  fieldName: \"name\",\r\n  setCardType: \"property\",\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard })(CardItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Character = ({ name, data }) => {\r\n  const character = data.characters.filter((character) => character.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${character.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <h1>{character.name}</h1>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={character} property=\"homeworld\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={character} property=\"species\" propertyItemList={data.species} setCardType=\"species\" />\r\n        <CardItem\r\n          item={character}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          setCardType=\"movie\"\r\n          fieldName=\"title\"\r\n        />\r\n        <CardItem item={character} property=\"gender\" />\r\n        <CardItem item={character} property=\"skin_color\" />\r\n        <CardItem item={character} property=\"birth_year\" />\r\n        <CardItem item={character} property=\"eye_color\" />\r\n        <CardItem item={character} property=\"hair_color\" />\r\n        <CardItem item={character} property=\"height\" />\r\n        <CardItem item={character} property=\"mass\" />\r\n        <CardItem\r\n          item={character}\r\n          property=\"starships\"\r\n          propertyName=\"Spaceships\"\r\n          propertyItemList={data.spaceships}\r\n          setCardType=\"spaceship\"\r\n        />\r\n        <CardItem item={character} property=\"vehicles\" propertyItemList={data.vehicles} setCardType=\"vehicle\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nCharacter.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Character);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Planet = ({ name, data }) => {\r\n  const planet = data.planets.filter((planet) => planet.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${planet.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <h1>{planet.name}</h1>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={planet} property=\"climate\" />\r\n        <CardItem item={planet} property=\"diameter\" />\r\n        <CardItem item={planet} property=\"gravity\" />\r\n        <CardItem item={planet} property=\"rotation_period\" />\r\n        <CardItem item={planet} property=\"orbital_period\" />\r\n        <CardItem item={planet} property=\"population\" />\r\n        <CardItem item={planet} property=\"terrain\" />\r\n        <CardItem\r\n          item={planet}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={planet} property=\"residents\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nPlanet.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Planet);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Movie = ({ name, data }) => {\r\n  const movie = data.movies.filter((movie) => movie.title === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${movie.title.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <h1>{movie.title}</h1>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={movie} property=\"director\" fieldName=\"title\"/>\r\n        <CardItem item={movie} property=\"producer\" fieldName=\"title\"/>\r\n        <CardItem item={movie} property=\"release_date\" fieldName=\"title\"/>\r\n        <CardItem item={movie} property=\"characters\" propertyItemList={data.characters} setCardType=\"character\" />\r\n        <CardItem item={movie} property=\"planets\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={movie} property=\"species\" propertyItemList={data.species} setCardType=\"species\" />\r\n        <CardItem\r\n          item={movie}\r\n          property=\"starships\"\r\n          propertyName=\"Spaceships\"\r\n          propertyItemList={data.spaceships}\r\n          setCardType=\"spaceship\"\r\n        />\r\n        <CardItem item={movie} property=\"vehicles\" propertyItemList={data.vehicles} setCardType=\"vehicle\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nMovie.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Movie);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Species = ({ name, data }) => {\r\n  const species = data.species.filter((species) => species.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${species.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <h1>{species.name}</h1>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={species} property=\"homeworld\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={species} property=\"classification\" />\r\n        <CardItem item={species} property=\"designation\" />\r\n        <CardItem item={species} property=\"language\" />\r\n        <CardItem item={species} property=\"average_lifespan\" />\r\n        <CardItem item={species} property=\"average_height\" />\r\n        <CardItem item={species} property=\"skin_colors\" />\r\n        <CardItem item={species} property=\"hair_colors\" />\r\n        <CardItem item={species} property=\"eye_colors\" />\r\n        <CardItem\r\n          item={species}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={species} property=\"people\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nSpecies.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Species);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Spaceship = ({ name, data }) => {\r\n  const spaceship = data.spaceships.filter((spaceship) => spaceship.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${spaceship.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <h1>{spaceship.name}</h1>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={spaceship} property=\"model\" />\r\n        <CardItem item={spaceship} property=\"manufacturer\" />\r\n        <CardItem item={spaceship} property=\"cost_in_credits\" />\r\n        <CardItem item={spaceship} property=\"crew\" />\r\n        <CardItem item={spaceship} property=\"length\" />\r\n        <CardItem item={spaceship} property=\"max_atmosphering_speed\" />\r\n        <CardItem item={spaceship} property=\"hyperdrive_rating\" />\r\n        <CardItem\r\n          item={spaceship}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={spaceship} property=\"pilots\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nSpaceship.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Spaceship);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Vehicle = ({ name, data }) => {\r\n  const vehicle = data.vehicles.filter((vehicle) => vehicle.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${vehicle.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <h1>{vehicle.name}</h1>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={vehicle} property=\"model\" />\r\n        <CardItem item={vehicle} property=\"manufacturer\" />\r\n        <CardItem item={vehicle} property=\"cost_in_credits\" />\r\n        <CardItem item={vehicle} property=\"crew\" />\r\n        <CardItem item={vehicle} property=\"length\" />\r\n        <CardItem item={vehicle} property=\"max_atmosphering_speed\" />\r\n        <CardItem\r\n          item={vehicle}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={vehicle} property=\"pilots\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nVehicle.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Vehicle);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Button } from \"@material-ui/core\";\r\n\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\n\r\nconst PropertyCard = ({ name, propertyInfo, data, selectedSpecialCard, setCard }) => {\r\n  const pluralizedSelectedSpecialCard =\r\n    selectedSpecialCard.charAt(selectedSpecialCard.length - 1) === \"s\"\r\n      ? selectedSpecialCard\r\n      : selectedSpecialCard + \"s\";\r\n\r\n  var filteredList;\r\n  if (isNaN(name)) {\r\n    // if it is a birth year:\r\n    if (name.slice(-3) === \"BBY\" && !isNaN(name.slice(0, -3))) {\r\n      console.log(name.slice(0, -3));\r\n      filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n        (prop) =>\r\n          prop[propertyInfo.property].slice(0, -3) >= name.slice(0, -3) * 0.9 &&\r\n          prop[propertyInfo.property].slice(0, -3) <= name.slice(0, -3) * 1.1\r\n      );\r\n    } else {\r\n      // if it is a normal string:\r\n      filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n        (prop) =>\r\n          prop[propertyInfo.property] === name ||\r\n          prop[propertyInfo.property].includes(name + \",\") ||\r\n          prop[propertyInfo.property].includes(\", \" + name)\r\n      );\r\n    }\r\n  } else {\r\n    // if it is a number:\r\n    filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n      (prop) => prop[propertyInfo.property] >= name * 0.9 && prop[propertyInfo.property] <= name * 1.1\r\n    );\r\n  }\r\n\r\n  const sampledList = sampleWithoutReplacement(filteredList, 5);\r\n\r\n  return (\r\n    <Paper>\r\n      <h1>{name}</h1>\r\n      <Grid container spacing={1}>\r\n        <h2>{propertyInfo.property}</h2>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={5} align=\"right\">\r\n            <b>{pluralizedSelectedSpecialCard.charAt(0).toUpperCase() + pluralizedSelectedSpecialCard.slice(1)}:</b>\r\n          </Grid>\r\n          <Grid item xs={7} align=\"left\">\r\n            {sampledList.map((element) => {\r\n              return (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={() => setCard(selectedSpecialCard, element[propertyInfo.fieldName])}\r\n                >\r\n                  {element[propertyInfo.fieldName]}\r\n                </Button>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nPropertyCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  propertyInfo: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  selectedSpecialCard: state.card.selectedSpecialCard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard })(PropertyCard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button, Container, Typography, Paper } from \"@material-ui/core\";\r\n\r\nimport StartGameButton from \"../StartGameButton\"\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../../actions/game\";\r\n\r\nconst Home = ({ data, settings, setCard, setGameSettings, resetCounter }) => {\r\n  return (\r\n    <Paper style = {{height: \"200px\"}}>\r\n      <StartGameButton buttonText=\"Start Game\"/>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          setCard(\"character\", sampleWithoutReplacement(data.characters, 1)[0].name);\r\n          resetCounter();\r\n          setGameSettings({ ...settings, explore: true });\r\n        }}\r\n      >\r\n        Explore\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nHome.propTypes = {\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button, Container, Typography, Paper } from \"@material-ui/core\";\r\n\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../../actions/game\";\r\n\r\nconst Final = ({ data, settings, counter, setCard, setGameSettings, resetCounter }) => {\r\n  return (\r\n    <Paper>\r\n      <Typography style={{ margin: \"20px 0px\", fontWeight: \"bold\" }}>\r\n        Congratulations! You have got to {settings.target} in {counter} steps.\r\n      </Typography>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          const sampledCharacters = sampleWithoutReplacement(data.characters, 2);\r\n          setGameSettings({ ...settings, target: sampledCharacters[1].name, on: true });\r\n          setCard(\"character\", sampledCharacters[0].name);\r\n          resetCounter();\r\n        }}\r\n      >\r\n        Start a New Game\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nFinal.propTypes = {\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n  counter: state.game.counter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(Final);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Character from \"./cards/Character\";\r\nimport Planet from \"./cards/Planet\";\r\nimport Movie from \"./cards/Movie\";\r\nimport Species from \"./cards/Species\";\r\nimport Spaceship from \"./cards/Spaceship\";\r\nimport Vehicle from \"./cards/Vehicle\";\r\nimport PropertyCard from \"./cards/PropertyCard\";\r\nimport Home from \"./cards/Home\";\r\nimport Final from \"./cards/Final\";\r\n\r\nimport { setSpecialCard } from \"../actions/card\";\r\n\r\nconst CardSelector = ({ selectedCard, setSpecialCard }) => {\r\n  selectedCard.type !== \"property\" && setSpecialCard(selectedCard.type);\r\n  switch (selectedCard.type) {\r\n    case \"Home\":\r\n      return <Home/ >\r\n    case \"Final\":\r\n      return <Final/ >\r\n    case \"character\":\r\n      return <Character name={selectedCard.name} />;\r\n    case \"planet\":\r\n      return <Planet name={selectedCard.name} />;\r\n    case \"movie\":\r\n      return <Movie name={selectedCard.name} />;\r\n    case \"species\":\r\n      return <Species name={selectedCard.name} />;\r\n    case \"spaceship\":\r\n      return <Spaceship name={selectedCard.name} />;\r\n    case \"vehicle\":\r\n      return <Vehicle name={selectedCard.name} />;\r\n    case \"property\":\r\n      return <PropertyCard name={selectedCard.name} propertyInfo={selectedCard.propertyInfo} />;\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n\r\n// PropTypes:\r\nCardSelector.propTypes = {\r\n  selectedCard: PropTypes.object.isRequired,\r\n  setSpecialCard: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  selectedCard: state.card.selectedCard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setSpecialCard })(CardSelector);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { LinearProgress, Button, Container, Typography } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./Header\";\r\nimport CardSelector from \"./CardSelector\";\r\nimport { loadData } from \"../actions/data\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { addToCounter } from \"../actions/game\";\r\n\r\nconst App = ({ data, selectedCard, setCard, loadData, settings, counter, addToCounter }) => {\r\n  const [allLoaded, setAllLoaded] = useState(false);\r\n\r\n  const loadAllData = () => {\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/films.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ movies: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/people.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ characters: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/planets.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ planets: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/species.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ species: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/starships.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ spaceships: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/vehicles.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ vehicles: response[\"items\"] });\r\n      });\r\n  };\r\n\r\n  useEffect(() => loadAllData(), []);\r\n  useEffect(() => allLoaded && setCard(\"Home\"), [allLoaded]);\r\n  useEffect(() => {\r\n    if (settings.target === selectedCard.name && settings.on === true) {\r\n      setCard(\"Final\");\r\n    } else {\r\n      addToCounter(counter);\r\n    }\r\n  }, [selectedCard]);\r\n  useEffect(() => {\r\n    setAllLoaded(\r\n      Object.entries(data)\r\n        .map((entry) => entry[1].length)\r\n        .every((item) => item > 0)\r\n    );\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LinearProgress variant=\"determinate\" value={allLoaded === true ? 100 : 0} />\r\n      <Container maxWidth=\"xs\">\r\n        <Header />\r\n        <CardSelector />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nApp.propTypes = {\r\n  selectedCard: PropTypes.object.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  loadData: PropTypes.func.isRequired,\r\n  addToCounter: PropTypes.func.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  selectedCard: state.card.selectedCard,\r\n  data: state.data.data,\r\n  counter: state.game.counter,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, loadData, addToCounter })(App);\r\n","import { LOAD_DATA } from \"../actions/types.js\";\r\n\r\n// Set Data:\r\nexport const loadData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: LOAD_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\"; // wrap this around everything for redux\r\nimport store from \"../store\";\r\nimport App from \"./App\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <App />\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Root from \"./components/Root\";\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}