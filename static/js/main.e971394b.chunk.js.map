{"version":3,"sources":["actions/types.js","reducers/card.js","reducers/data.js","reducers/game.js","reducers/index.js","store.js","components/SampleWithoutReplacement.js","actions/card.js","actions/game.js","components/StartGameButton.js","styles.js","components/Header.js","components/cards/CardItem.js","components/cards/Character.js","components/cards/Planet.js","components/cards/Movie.js","components/cards/Species.js","components/cards/Spaceship.js","components/cards/Vehicle.js","components/cards/PropertyCard.js","components/cards/Home.js","components/cards/Final.js","components/CardSelector.js","components/App.js","actions/data.js","components/Root.js","index.js"],"names":["SET_CARD","LOAD_DATA","SET_SPECIAL_CARD","SET_GAME_SETTINGS","RESET_COUNTER","ADD_TO_COUNTER","ADD_TO_PATH","initialState","selectedCard","type","name","propertyInfo","selectedSpecialCard","data","movies","characters","planets","species","spaceships","vehicles","settings","on","target","level","explore","counter","cardPath","combineReducers","card","state","action","payload","game","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","sampleWithoutReplacement","bucket","n","Math","min","length","idxs","Array","keys","getRandomIndex","randomIndex","floor","random","splice","sampled","i","push","setCard","cardType","dispatch","setGameSettings","resetCounter","connect","buttonText","Button","variant","color","onClick","sampledCharacters","useStyles","makeStyles","itemBtn","width","gameCard","boxShadow","overflow","backgroundColor","gameCardTitle","height","marginBottom","marginTop","paddingTop","fontSize","propertyCardTitle","header","classes","Paper","className","Grid","container","spacing","item","xs","align","Typography","style","getByURL","propertyItemList","url","fieldName","filter","CardItem","property","propertyName","setCardType","charAt","toUpperCase","slice","replace","isArray","map","splittetProperty","split","sp","renderButton","defaultProps","character","img_src","process","src","alt","planet","movie","title","spaceship","vehicle","filteredList","pluralizedSelectedSpecialCard","isNaN","prop","includes","console","log","sampledList","element","margin","fontWeight","setSpecialCard","addToPath","loadData","addToCounter","currentCounter","useState","allLoaded","setAllLoaded","useEffect","fetch","then","response","json","Object","entries","entry","every","LinearProgress","value","Container","maxWidth","Root","THEME","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","palette","primary","main","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e971394b.chunk.js","sourcesContent":["export const SET_CARD = \"SET_CARD\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\nexport const SET_SPECIAL_CARD = \"SET_SPECIAL_CARD\";\r\nexport const SET_GAME_SETTINGS = \"SET_GAME_SETTINGS\";\r\nexport const RESET_COUNTER = \"RESET_COUNTER\";\r\nexport const ADD_TO_COUNTER = \"ADD_TO_COUNTER\";\r\nexport const ADD_TO_PATH = \"ADD_TO_PATH\"","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_CARD, SET_SPECIAL_CARD } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  selectedCard: {\r\n    type: null,\r\n    name: null,\r\n    propertyInfo: {},\r\n  },\r\n  selectedSpecialCard: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CARD:\r\n      return {\r\n        ...state,\r\n        selectedCard: action.payload,\r\n      };\r\n    case SET_SPECIAL_CARD:\r\n      return {\r\n        ...state,\r\n        selectedSpecialCard: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { LOAD_DATA } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    movies: [],\r\n    characters: [],\r\n    planets: [],\r\n    species: [],\r\n    spaceships: [],\r\n    vehicles: [],\r\n  },\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, ...action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_GAME_SETTINGS, ADD_TO_COUNTER, RESET_COUNTER, ADD_TO_PATH } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  settings: {\r\n    on: false,\r\n    target: null,\r\n    level: \"easy\",\r\n    explore: false,\r\n  },\r\n  counter: -1,\r\n  cardPath: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_GAME_SETTINGS:\r\n      return {\r\n        ...state,\r\n        settings: action.payload,\r\n      };\r\n    case ADD_TO_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: action.payload\r\n      }\r\n    case RESET_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: -1,\r\n        cardPath: [],\r\n      }\r\n    case ADD_TO_PATH:\r\n      return {\r\n        ...state,\r\n        cardPath: [...state.cardPath, action.payload]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport card from \"./card\";\r\nimport data from \"./data\";\r\nimport game from \"./game\";\r\n\r\nexport default combineReducers({\r\n  card,\r\n  data,\r\n  game,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;","const sampleWithoutReplacement = (bucket, n) => {\r\n  n = Math.min(n, bucket.length);\r\n\r\n  // Array of indeces 0 to n:\r\n  var idxs = [...Array(bucket.length).keys()]\r\n\r\n  // Select a random index and remove it while returning:\r\n  const getRandomIndex = () => {\r\n    var randomIndex = Math.floor(Math.random() * idxs.length);\r\n    return idxs.splice(randomIndex, 1)[0];\r\n  };\r\n\r\n  var sampled = [];\r\n  for (var i = 0; i < n; i++) {\r\n    sampled.push(bucket[getRandomIndex()]);\r\n  }\r\n\r\n  return sampled;\r\n};\r\n\r\nexport default sampleWithoutReplacement","import { SET_CARD, SET_SPECIAL_CARD } from \"../actions/types.js\";\r\n\r\n// Set card:\r\nexport const setCard = (cardType = null, name = null, propertyInfo = {}) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_CARD,\r\n    payload: {\r\n      type: cardType,\r\n      name: name,\r\n      propertyInfo: propertyInfo,\r\n    },\r\n  });\r\n};\r\n\r\n// Set special card:\r\nexport const setSpecialCard = (type) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_SPECIAL_CARD,\r\n    payload: type,\r\n  });\r\n};\r\n","import { SET_GAME_SETTINGS, ADD_TO_COUNTER, RESET_COUNTER, ADD_TO_PATH } from \"../actions/types.js\";\r\n\r\n// Set Game Settings:\r\nexport const setGameSettings = (settings) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_GAME_SETTINGS,\r\n    payload: settings,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const addToCounter = (currentCounter) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_TO_COUNTER,\r\n    payload: currentCounter + 1,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const resetCounter = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_COUNTER,\r\n    payload: null,\r\n  });\r\n};\r\n\r\n// Add to counter:\r\nexport const addToPath = (item) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_TO_PATH,\r\n    payload: item,\r\n  });\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport sampleWithoutReplacement from \"./SampleWithoutReplacement\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../actions/game\";\r\n\r\nconst StartGameButton = ({ buttonText, setGameSettings, setCard, resetCounter, settings, data }) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      onClick={() => {\r\n        const sampledCharacters = sampleWithoutReplacement(data.characters, 2);\r\n        setGameSettings({ ...settings, target: sampledCharacters[1].name, on: true, explore: false });\r\n        setCard(\"character\", sampledCharacters[0].name);\r\n        resetCounter();\r\n      }}\r\n    >\r\n      {buttonText}\r\n    </Button>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nStartGameButton.propTypes = {\r\n  buttonText: PropTypes.string.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(StartGameButton);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  itemBtn: {\r\n    width: \"90%\",\r\n  },\r\n  gameCard: {\r\n    boxShadow: '0px 0px 3px 3px rgba(250, 250, 250, 0.3)',\r\n    overflow: 'hidden',\r\n    backgroundColor: \"#f3f3f3\",\r\n  },\r\n  gameCardTitle: {\r\n    height: \"50px\",\r\n    backgroundColor: \"#e0bea4\",\r\n    marginBottom: \"15px\",\r\n    marginTop: \"-4px\",\r\n    paddingTop: \"10px\",\r\n    fontSize: 20,\r\n  },\r\n  propertyCardTitle: {\r\n    height: \"25px\",\r\n    backgroundColor: \"#F0EBBA\",\r\n    marginTop: \"-16px\",\r\n    marginBottom: \"10px\",\r\n    fontSize: 15,\r\n  },\r\n  header: {\r\n    backgroundColor: \"#f3f3f3\",\r\n  }\r\n});\r\n\r\nexport default useStyles","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { LinearProgress, Button, Container, Typography, Paper, Grid } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport StartGameButton from \"./StartGameButton\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { setGameSettings } from \"../actions/game\";\r\nimport useStyles from \"../styles\";\r\n\r\nconst Header = ({ counter, settings, setCard, setGameSettings }) => {\r\n  const classes = useStyles();\r\n\r\n  if (settings.on) {\r\n    return (\r\n      <Paper className={classes.header}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={8} align=\"center\">\r\n            <Typography>Target character: </Typography>\r\n            <Button style={{ width: \"100%\" }}> {settings.target} </Button>\r\n          </Grid>\r\n          <Grid item xs={2} align=\"center\">\r\n            <Typography>Steps:</Typography>\r\n            <Button style={{ width: \"100%\" }}> {counter} </Button>\r\n          </Grid>\r\n          <Grid item xs={2} align=\"center\">\r\n            <CancelIcon\r\n              fontSize=\"large\"\r\n              color=\"error\"\r\n              onClick={() => {\r\n                setCard(\"Home\");\r\n                setGameSettings({ ...settings, on: false });\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n  if (settings.explore) {\r\n    return <StartGameButton buttonText=\"Start Game Now\" />;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\n// PropTypes:\r\nHeader.propTypes = {\r\n  setCard: PropTypes.func.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  counter: state.game.counter,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings })(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport { setCard } from \"../../actions/card\";\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\n\r\nconst getByURL = (propertyItemList, url, fieldName = \"name\") => {\r\n  // returns the item's fieldName value given by the url\r\n  return propertyItemList.filter((item) => item.url === url)[0][fieldName];\r\n};\r\n\r\nconst CardItem = ({ item, property, propertyName, propertyItemList, fieldName, setCard, setCardType }) => {\r\n  const classes = useStyles();\r\n\r\n  // propertyName formatting:\r\n  if (!propertyName) {\r\n    propertyName = property.charAt(0).toUpperCase() + property.slice(1);\r\n  }\r\n  propertyName = propertyName.replace(/_/g, \" \");\r\n\r\n  const renderButton = () => {\r\n    if (propertyItemList) {\r\n      if (Array.isArray(item[property])) {\r\n        // if the property is an array of urls (eg. list of movie urls):\r\n        const sampledItems = sampleWithoutReplacement(item[property], 5);\r\n        return sampledItems.map((i) => {\r\n          const name = getByURL(propertyItemList, i, fieldName);\r\n          return (\r\n            <Button className={classes.itemBtn} variant=\"contained\" onClick={() => setCard(setCardType, name)}>\r\n              {name}\r\n            </Button>\r\n          );\r\n        });\r\n      }\r\n      // if the property is a single url:\r\n      const name = getByURL(propertyItemList, item[property], fieldName);\r\n      return (\r\n        <Button className={classes.itemBtn} variant=\"contained\" onClick={() => setCard(setCardType, name)}>\r\n          {name}\r\n        </Button>\r\n      );\r\n    }\r\n    // if the property is a string with a list of comma separated characteristics:\r\n    const splittetProperty = item[property].split(\", \");\r\n    if (splittetProperty.length > 1) {\r\n      return splittetProperty.map((sp) => (\r\n        <Button\r\n          className={classes.itemBtn}\r\n          variant=\"contained\"\r\n          onClick={() => setCard(setCardType, sp, { property: property, fieldName: fieldName })}\r\n        >\r\n          {sp}\r\n        </Button>\r\n      ));\r\n    }\r\n\r\n    // if the property is a single value:\r\n    return (\r\n      <Button\r\n        className={classes.itemBtn}\r\n        variant=\"contained\"\r\n        onClick={() => setCard(setCardType, item[property], { property: property, fieldName: fieldName })}\r\n      >\r\n        {item[property]}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  // rendering the item if the item[property] is available:\r\n  if (item[property] && item[property] !== \"unknown\" && item[property] !== \"n/a\" && item[property].length > 0) {\r\n    return (\r\n      <Grid container spacing={1} style={{marginBottom: \"3px\"}}>\r\n        <Grid item xs={5} align=\"right\">\r\n          <b>{propertyName}:</b>\r\n        </Grid>\r\n        <Grid item xs={7} align=\"left\">\r\n          {renderButton()}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\n// PropTypes:\r\nCardItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  property: PropTypes.string.isRequired,\r\n  propertyName: PropTypes.string,\r\n  propertyItemList: PropTypes.array,\r\n  fieldName: PropTypes.string,\r\n  setCard: PropTypes.func.isRequired,\r\n  setCardType: PropTypes.string,\r\n};\r\n\r\nCardItem.defaultProps = {\r\n  propertyName: null,\r\n  propertyItemList: null,\r\n  fieldName: \"name\",\r\n  setCardType: \"property\",\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard })(CardItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Character = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const character = data.characters.filter((character) => character.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${character.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <Typography className={classes.gameCardTitle}>\r\n        {character.name}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={character} property=\"homeworld\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={character} property=\"species\" propertyItemList={data.species} setCardType=\"species\" />\r\n        <CardItem\r\n          item={character}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          setCardType=\"movie\"\r\n          fieldName=\"title\"\r\n        />\r\n        <CardItem item={character} property=\"gender\" />\r\n        <CardItem item={character} property=\"skin_color\" />\r\n        <CardItem item={character} property=\"birth_year\" />\r\n        <CardItem item={character} property=\"eye_color\" />\r\n        <CardItem item={character} property=\"hair_color\" />\r\n        <CardItem item={character} property=\"height\" />\r\n        <CardItem item={character} property=\"mass\" />\r\n        <CardItem\r\n          item={character}\r\n          property=\"starships\"\r\n          propertyName=\"Spaceships\"\r\n          propertyItemList={data.spaceships}\r\n          setCardType=\"spaceship\"\r\n        />\r\n        <CardItem item={character} property=\"vehicles\" propertyItemList={data.vehicles} setCardType=\"vehicle\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nCharacter.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Character);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Planet = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const planet = data.planets.filter((planet) => planet.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${planet.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <Typography className={classes.gameCardTitle}>\r\n        {planet.name}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={planet} property=\"climate\" />\r\n        <CardItem item={planet} property=\"diameter\" />\r\n        <CardItem item={planet} property=\"gravity\" />\r\n        <CardItem item={planet} property=\"rotation_period\" />\r\n        <CardItem item={planet} property=\"orbital_period\" />\r\n        <CardItem item={planet} property=\"population\" />\r\n        <CardItem item={planet} property=\"terrain\" />\r\n        <CardItem\r\n          item={planet}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={planet} property=\"residents\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nPlanet.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Planet);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Movie = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const movie = data.movies.filter((movie) => movie.title === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${movie.title.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <Typography className={classes.gameCardTitle}>\r\n        {movie.title}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={movie} property=\"director\" fieldName=\"title\"/>\r\n        <CardItem item={movie} property=\"producer\" fieldName=\"title\"/>\r\n        <CardItem item={movie} property=\"release_date\" fieldName=\"title\"/>\r\n        <CardItem item={movie} property=\"characters\" propertyItemList={data.characters} setCardType=\"character\" />\r\n        <CardItem item={movie} property=\"planets\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={movie} property=\"species\" propertyItemList={data.species} setCardType=\"species\" />\r\n        <CardItem\r\n          item={movie}\r\n          property=\"starships\"\r\n          propertyName=\"Spaceships\"\r\n          propertyItemList={data.spaceships}\r\n          setCardType=\"spaceship\"\r\n        />\r\n        <CardItem item={movie} property=\"vehicles\" propertyItemList={data.vehicles} setCardType=\"vehicle\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nMovie.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Movie);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Species = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const species = data.species.filter((species) => species.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${species.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <Typography className={classes.gameCardTitle}>\r\n        {species.name}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={species} property=\"homeworld\" propertyItemList={data.planets} setCardType=\"planet\" />\r\n        <CardItem item={species} property=\"classification\" />\r\n        <CardItem item={species} property=\"designation\" />\r\n        <CardItem item={species} property=\"language\" />\r\n        <CardItem item={species} property=\"average_lifespan\" />\r\n        <CardItem item={species} property=\"average_height\" />\r\n        <CardItem item={species} property=\"skin_colors\" />\r\n        <CardItem item={species} property=\"hair_colors\" />\r\n        <CardItem item={species} property=\"eye_colors\" />\r\n        <CardItem\r\n          item={species}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={species} property=\"people\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nSpecies.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Species);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Spaceship = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const spaceship = data.spaceships.filter((spaceship) => spaceship.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${spaceship.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <Typography className={classes.gameCardTitle}>\r\n        {spaceship.name}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={spaceship} property=\"model\" />\r\n        <CardItem item={spaceship} property=\"manufacturer\" />\r\n        <CardItem item={spaceship} property=\"cost_in_credits\" />\r\n        <CardItem item={spaceship} property=\"crew\" />\r\n        <CardItem item={spaceship} property=\"length\" />\r\n        <CardItem item={spaceship} property=\"max_atmosphering_speed\" />\r\n        <CardItem item={spaceship} property=\"hyperdrive_rating\" />\r\n        <CardItem\r\n          item={spaceship}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={spaceship} property=\"pilots\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nSpaceship.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Spaceship);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nconst Vehicle = ({ name, data }) => {\r\n  const classes = useStyles();\r\n  const vehicle = data.vehicles.filter((vehicle) => vehicle.name === name)[0];\r\n  const img_src = `${process.env.PUBLIC_URL}/sw_pics/${vehicle.name.replace(\"/\", \"-\")}.png`\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <img src={img_src} alt=\"\" width=\"100%\"/>\r\n      <Typography className={classes.gameCardTitle}>\r\n        {vehicle.name}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <CardItem item={vehicle} property=\"model\" />\r\n        <CardItem item={vehicle} property=\"manufacturer\" />\r\n        <CardItem item={vehicle} property=\"cost_in_credits\" />\r\n        <CardItem item={vehicle} property=\"crew\" />\r\n        <CardItem item={vehicle} property=\"length\" />\r\n        <CardItem item={vehicle} property=\"max_atmosphering_speed\" />\r\n        <CardItem\r\n          item={vehicle}\r\n          property=\"films\"\r\n          propertyName=\"Movies\"\r\n          propertyItemList={data.movies}\r\n          fieldName=\"title\"\r\n          setCardType=\"movie\"\r\n        />\r\n        <CardItem item={vehicle} property=\"pilots\" propertyItemList={data.characters} setCardType=\"character\" />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nVehicle.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Vehicle);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Paper, Grid, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../../styles\";\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\n\r\nconst PropertyCard = ({ name, propertyInfo, data, selectedSpecialCard, setCard }) => {\r\n  const classes = useStyles();\r\n\r\n  const pluralizedSelectedSpecialCard =\r\n    selectedSpecialCard.charAt(selectedSpecialCard.length - 1) === \"s\"\r\n      ? selectedSpecialCard\r\n      : selectedSpecialCard + \"s\";\r\n\r\n  var filteredList;\r\n  if (isNaN(name)) {\r\n    // if it is a birth year:\r\n    if (name.slice(-3) === \"BBY\" && !isNaN(name.slice(0, -3))) {\r\n      console.log(name.slice(0, -3));\r\n      filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n        (prop) =>\r\n          prop[propertyInfo.property].slice(0, -3) >= name.slice(0, -3) * 0.9 &&\r\n          prop[propertyInfo.property].slice(0, -3) <= name.slice(0, -3) * 1.1\r\n      );\r\n    } else {\r\n      // if it is a normal string:\r\n      filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n        (prop) =>\r\n          prop[propertyInfo.property] === name ||\r\n          prop[propertyInfo.property].includes(name + \",\") ||\r\n          prop[propertyInfo.property].includes(\", \" + name)\r\n      );\r\n    }\r\n  } else {\r\n    // if it is a number:\r\n    filteredList = data[pluralizedSelectedSpecialCard].filter(\r\n      (prop) => prop[propertyInfo.property] >= name * 0.9 && prop[propertyInfo.property] <= name * 1.1\r\n    );\r\n  }\r\n\r\n  const sampledList = sampleWithoutReplacement(filteredList, 5);\r\n\r\n    \r\n  var propertyName = propertyInfo.property.charAt(0).toUpperCase() + propertyInfo.property.slice(1);\r\n  propertyName = propertyName.replace(/_/g, \" \");\r\n\r\n  return (\r\n    <Paper className={classes.gameCard}>\r\n      <Typography className={classes.gameCardTitle}>{name}</Typography>\r\n      <Typography className={classes.propertyCardTitle}>({propertyName})</Typography>\r\n      <Grid container spacing={1}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={5} align=\"right\">\r\n            <b>{pluralizedSelectedSpecialCard.charAt(0).toUpperCase() + pluralizedSelectedSpecialCard.slice(1)}:</b>\r\n          </Grid>\r\n          <Grid item xs={7} align=\"left\">\r\n            {sampledList.map((element) => {\r\n              return (\r\n                <Button\r\n                  className={classes.itemBtn}\r\n                  variant=\"contained\"\r\n                  onClick={() => setCard(selectedSpecialCard, element[propertyInfo.fieldName])}\r\n                >\r\n                  {element[propertyInfo.fieldName]}\r\n                </Button>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nPropertyCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  propertyInfo: PropTypes.string.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  selectedSpecialCard: state.card.selectedSpecialCard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard })(PropertyCard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button, Container, Typography, Paper } from \"@material-ui/core\";\r\n\r\nimport StartGameButton from \"../StartGameButton\"\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../../actions/game\";\r\n\r\nconst Home = ({ data, settings, setCard, setGameSettings, resetCounter }) => {\r\n  return (\r\n    <Paper style = {{height: \"200px\"}}>\r\n      <StartGameButton buttonText=\"Start Game\"/>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          setCard(\"character\", sampleWithoutReplacement(data.characters, 1)[0].name);\r\n          resetCounter();\r\n          setGameSettings({ ...settings, explore: true });\r\n        }}\r\n      >\r\n        Explore\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nHome.propTypes = {\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Button, Container, Typography, Paper } from \"@material-ui/core\";\r\n\r\nimport sampleWithoutReplacement from \"../SampleWithoutReplacement\";\r\nimport { setCard } from \"../../actions/card\";\r\nimport { setGameSettings, resetCounter } from \"../../actions/game\";\r\n\r\nconst Final = ({ data, settings, counter, cardPath, setCard, setGameSettings, resetCounter }) => {\r\n  return (\r\n    <Paper>\r\n      <Typography style={{ margin: \"20px 0px\", fontWeight: \"bold\" }}>\r\n        Congratulations! You have got to {settings.target} in {counter} steps.\r\n      </Typography>\r\n\r\n      <Typography style={{ margin: \"20px 0px\" }}>\r\n        Your path:\r\n      </Typography>\r\n\r\n      {cardPath.map((item) => <p><b>{item}</b></p>)}\r\n\r\n      <p><b>{settings.target}</b></p>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          const sampledCharacters = sampleWithoutReplacement(data.characters, 2);\r\n          setGameSettings({ ...settings, target: sampledCharacters[1].name, on: true });\r\n          setCard(\"character\", sampledCharacters[0].name);\r\n          resetCounter();\r\n        }}\r\n      >\r\n        Start a New Game\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nFinal.propTypes = {\r\n  setCard: PropTypes.func.isRequired,\r\n  setGameSettings: PropTypes.func.isRequired,\r\n  resetCounter: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  cardPath: PropTypes.array.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n  settings: state.game.settings,\r\n  counter: state.game.counter,\r\n  cardPath: state.game.cardPath,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, setGameSettings, resetCounter })(Final);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Character from \"./cards/Character\";\r\nimport Planet from \"./cards/Planet\";\r\nimport Movie from \"./cards/Movie\";\r\nimport Species from \"./cards/Species\";\r\nimport Spaceship from \"./cards/Spaceship\";\r\nimport Vehicle from \"./cards/Vehicle\";\r\nimport PropertyCard from \"./cards/PropertyCard\";\r\nimport Home from \"./cards/Home\";\r\nimport Final from \"./cards/Final\";\r\n\r\nimport { setSpecialCard } from \"../actions/card\";\r\nimport { addToPath } from \"../actions/game\";\r\n\r\nconst CardSelector = ({ selectedCard, setSpecialCard, addToPath }) => {\r\n  selectedCard.type !== \"property\" && setSpecialCard(selectedCard.type);\r\n  addToPath(selectedCard.name)\r\n  switch (selectedCard.type) {\r\n    case \"Home\":\r\n      return <Home/ >\r\n    case \"Final\":\r\n      return <Final/ >\r\n    case \"character\":\r\n      return <Character name={selectedCard.name} />;\r\n    case \"planet\":\r\n      return <Planet name={selectedCard.name} />;\r\n    case \"movie\":\r\n      return <Movie name={selectedCard.name} />;\r\n    case \"species\":\r\n      return <Species name={selectedCard.name} />;\r\n    case \"spaceship\":\r\n      return <Spaceship name={selectedCard.name} />;\r\n    case \"vehicle\":\r\n      return <Vehicle name={selectedCard.name} />;\r\n    case \"property\":\r\n      return <PropertyCard name={selectedCard.name} propertyInfo={selectedCard.propertyInfo} />;\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n\r\n// PropTypes:\r\nCardSelector.propTypes = {\r\n  selectedCard: PropTypes.object.isRequired,\r\n  setSpecialCard: PropTypes.func.isRequired,\r\n  addToPath: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  selectedCard: state.card.selectedCard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setSpecialCard, addToPath })(CardSelector);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { LinearProgress, Button, Container, Typography } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./Header\";\r\nimport CardSelector from \"./CardSelector\";\r\nimport { loadData } from \"../actions/data\";\r\nimport { setCard } from \"../actions/card\";\r\nimport { addToCounter } from \"../actions/game\";\r\n\r\nconst App = ({ data, selectedCard, setCard, loadData, settings, counter, addToCounter }) => {\r\n  const [allLoaded, setAllLoaded] = useState(false);\r\n\r\n  const loadAllData = () => {\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/films.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ movies: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/people.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ characters: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/planets.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ planets: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/species.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ species: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/starships.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ spaceships: response[\"items\"] });\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/vehicles.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({ vehicles: response[\"items\"] });\r\n      });\r\n  };\r\n\r\n  useEffect(() => loadAllData(), []);\r\n  useEffect(() => allLoaded && setCard(\"Home\"), [allLoaded]);\r\n  useEffect(() => {\r\n    if (settings.target === selectedCard.name && settings.on === true) {\r\n      setCard(\"Final\");\r\n    } else {\r\n      addToCounter(counter);\r\n    }\r\n  }, [selectedCard]);\r\n  useEffect(() => {\r\n    setAllLoaded(\r\n      Object.entries(data)\r\n        .map((entry) => entry[1].length)\r\n        .every((item) => item > 0)\r\n    );\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LinearProgress variant=\"determinate\" color=\"primary\" value={allLoaded === true ? 100 : 0} />\r\n      <Container maxWidth=\"xs\">\r\n        <Header />\r\n        <CardSelector />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nApp.propTypes = {\r\n  selectedCard: PropTypes.object.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  loadData: PropTypes.func.isRequired,\r\n  addToCounter: PropTypes.func.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  selectedCard: state.card.selectedCard,\r\n  data: state.data.data,\r\n  counter: state.game.counter,\r\n  settings: state.game.settings,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, loadData, addToCounter })(App);\r\n","import { LOAD_DATA } from \"../actions/types.js\";\r\n\r\n// Set Data:\r\nexport const loadData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: LOAD_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\"; // wrap this around everything for redux\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport store from \"../store\";\r\nimport App from \"./App\";\r\n\r\nconst Root = () => {\r\n  const THEME = createMuiTheme({\r\n    typography: {\r\n      fontFamily: `'Source Code Pro', monospace`,\r\n      fontSize: 14,\r\n      fontWeightLight: 300,\r\n      fontWeightRegular: 400,\r\n      fontWeightMedium: 500,\r\n    },\r\n    palette: {\r\n      primary: {\r\n        main: \"#FFCD00\"\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <MuiThemeProvider theme={THEME}>\r\n      <Provider store={store}>\r\n        <div>\r\n          <App />\r\n        </div>\r\n      </Provider>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Root from \"./components/Root\";\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}